[{"D:\\clone\\myClone\\client\\src\\index.js":"1","D:\\clone\\myClone\\client\\src\\App.js":"2","D:\\clone\\myClone\\client\\src\\reportWebVitals.js":"3","D:\\clone\\myClone\\client\\src\\components\\Home.js":"4","D:\\clone\\myClone\\client\\src\\components\\Register.js":"5","D:\\clone\\myClone\\client\\src\\components\\Login.js":"6","D:\\clone\\myClone\\client\\src\\components\\Main.js":"7","D:\\clone\\myClone\\client\\src\\routes\\UpdatePage.js":"8","D:\\clone\\myClone\\client\\src\\routes\\ModelDetailPage.js":"9","D:\\clone\\myClone\\client\\src\\context\\ModelsContext.js":"10","D:\\clone\\myClone\\client\\src\\components\\AddModel.js":"11","D:\\clone\\myClone\\client\\src\\components\\UpdateModel.js":"12","D:\\clone\\myClone\\client\\src\\components\\ModelList.js":"13","D:\\clone\\myClone\\client\\src\\components\\Reviews.js":"14","D:\\clone\\myClone\\client\\src\\components\\AddReview.js":"15","D:\\clone\\myClone\\client\\src\\components\\StarRating.js":"16","D:\\clone\\myClone\\client\\src\\apis\\ModelFinder.js":"17","D:\\clone\\myClone\\client\\src\\components\\QuestionForm.js":"18","D:\\clone\\myClone\\client\\src\\apis\\Questions.js":"19","D:\\clone\\myClone\\client\\src\\apis\\AnsweredQuestion.js":"20"},{"size":517,"mtime":1610548628997,"results":"21","hashOfConfig":"22"},{"size":3268,"mtime":1610548628979,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1610548628998,"results":"24","hashOfConfig":"22"},{"size":4831,"mtime":1610979875553,"results":"25","hashOfConfig":"22"},{"size":2602,"mtime":1610548628984,"results":"26","hashOfConfig":"22"},{"size":2483,"mtime":1610548628982,"results":"27","hashOfConfig":"22"},{"size":2397,"mtime":1610548628983,"results":"28","hashOfConfig":"22"},{"size":281,"mtime":1610548628999,"results":"29","hashOfConfig":"22"},{"size":1672,"mtime":1610548628998,"results":"30","hashOfConfig":"22"},{"size":525,"mtime":1610548628987,"results":"31","hashOfConfig":"22"},{"size":2503,"mtime":1610548628980,"results":"32","hashOfConfig":"22"},{"size":2731,"mtime":1610548628986,"results":"33","hashOfConfig":"22"},{"size":4414,"mtime":1610548628984,"results":"34","hashOfConfig":"22"},{"size":1144,"mtime":1610548628985,"results":"35","hashOfConfig":"22"},{"size":2951,"mtime":1610548628980,"results":"36","hashOfConfig":"22"},{"size":557,"mtime":1610548628985,"results":"37","hashOfConfig":"22"},{"size":115,"mtime":1610548628979,"results":"38","hashOfConfig":"22"},{"size":3459,"mtime":1611013320020,"results":"39","hashOfConfig":"22"},{"size":118,"mtime":1610990718073,"results":"40","hashOfConfig":"22"},{"size":126,"mtime":1610990935740,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"gdf4yl",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\clone\\myClone\\client\\src\\index.js",[],["89","90"],"D:\\clone\\myClone\\client\\src\\App.js",["91","92"],"import { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Main from \"./components/Main\";\r\nimport UpdatePage from './routes/UpdatePage';\r\nimport ModelDetailPage from './routes/ModelDetailPage';\r\nimport {ModelContextProvider} from './context/ModelsContext';\r\n\r\ntoast.configure();\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const setAuth = (boolean) => {\r\n    setIsAuthenticated(boolean);\r\n  };\r\n  const isAuth = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const parseRes = await response.json();\r\n      console.log(parseRes);\r\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    isAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <ModelContextProvider>\r\n    <Fragment>\r\n      <Router>\r\n        <div className=\"container\">\r\n          <Switch>\r\n            <Route exact path=\"/\" render={(props) => <Main {...props} />} />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/login\"\r\n              render={(props) =>\r\n                !isAuthenticated ? (\r\n                  <Login {...props} setAuth={setAuth} />\r\n                ) : (\r\n                  <Redirect to=\"/dashboard\" />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/register\"\r\n              render={(props) =>\r\n                !isAuthenticated ? (\r\n                  <Register {...props} setAuth={setAuth} />\r\n                ) : (\r\n                  <Redirect to=\"/login\" />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/dashboard\"\r\n              render={(props) =>\r\n                isAuthenticated ? (\r\n                  <Home {...props} setAuth={setAuth} />\r\n                ) : (\r\n                  <Redirect to=\"/login\" />\r\n                )\r\n              }\r\n            />\r\n\r\n\r\n            <Route\r\n              exact\r\n              path=\"/models/:id/update\"\r\n              render={(props) =>\r\n                isAuthenticated ? (\r\n                  <UpdatePage {...props} setAuth={setAuth} />\r\n                ) : (\r\n                  <Redirect to=\"/login\" />\r\n                )\r\n              }\r\n            />\r\n\r\n<Route\r\n              exact\r\n              path=\"/models/:id\"\r\n              render={(props) =>\r\n                isAuthenticated ? (\r\n                  <ModelDetailPage {...props} setAuth={setAuth} />\r\n                ) : (\r\n                  <Redirect to=\"/login\" />\r\n                )\r\n              }\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Fragment>\r\n    </ModelContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\clone\\myClone\\client\\src\\reportWebVitals.js",[],"D:\\clone\\myClone\\client\\src\\components\\Home.js",["93","94","95","96"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport modelPic from \"../img/modelPic.png\";\r\n// import Home from './Home';\r\nimport AddModel from './AddModel';\r\nimport ModelList from './ModelList';\r\nimport QuestionForm from './QuestionForm';\r\nconst Home = ({ setAuth }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [id,setId]=useState(\"\");\r\n  const [modelName, setModelName] = useState(\"\");\r\n  const [superModels, setSuperModels] = useState([]);\r\n\r\n  const getName = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/dashboard/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const parsRes = await response.json();\r\n      console.log('parseRes',parsRes);\r\n      setName(parsRes.user_name);\r\n      setId(parsRes.user_id)\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getName();\r\n  }, []);\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out successfully!\");\r\n  };\r\n\r\n  const onSearchChange = (e) => {\r\n    setModelName(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/models/?modelName=${modelName}`\r\n      );\r\n      const resResponse = await response.json();\r\n      console.log(\"models:\", resResponse);\r\n      setSuperModels(resResponse);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const superModelMap = superModels.map((superModel) => {\r\n    return (\r\n      <tr key={superModel.user_id}>\r\n        <td>{superModel.first_name}</td>\r\n        <td>{superModel.last_name}</td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo03\"\r\n            aria-controls=\"navbarTogglerDemo03\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <a className=\"navbar-brand\" href=\"\">\r\n            Fashion Model Search\r\n          </a>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\"></ul>\r\n            <form className=\"d-flex\">\r\n              <p className=\"me-2\">Welcome {name}!</p>\r\n              {/* <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" /> */}\r\n              {/* <button class=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n              <button className=\"btn btn-danger\" onClick={(e) => logout(e)}>\r\n                Logout\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"imgcontainer text-center my-3\">\r\n        <img src={modelPic} alt=\"Sign-in\" width=\"250\" height=\"150\" />\r\n      </div>\r\n      <div className='container'>\r\n      <AddModel />\r\n      <ModelList />\r\n      </div>\r\n         \r\n{/* // Search are temporary closed */}\r\n<hr />\r\n<h4>search area temporary closed</h4>\r\n      {/* <div className=\"container text-center\">\r\n        <form className=\"d-flex my-5\" onSubmit={onSubmitForm}>\r\n          <input\r\n            required=\"required\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter model...\"\r\n            value={modelName}\r\n            onChange={onSearchChange}\r\n          />\r\n          <button className=\"btn btn-success\">Search</button>\r\n        </form>\r\n\r\n        <table className=\"table table-dark table-hover my-5\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">First</th>\r\n              <th scope=\"col\">Last</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{superModelMap}</tbody>\r\n        </table>\r\n        {superModels.length === 0 && <p>No results found</p>}\r\n      </div> */}\r\n      <hr />\r\n      <QuestionForm id={id} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Fragment } from 'react';\r\n// import AddRestaurant from './AddRestaurant';\r\n// import Header from './Header';\r\n// import RestaurantList from './RestaurantList';\r\n\r\n\r\n// const Home = () => {\r\n//     return (\r\n//         <Fragment>\r\n//             <Header />\r\n//             <AddRestaurant />\r\n//             <RestaurantList />\r\n//         </Fragment>\r\n//     )\r\n// }\r\n\r\nexport default Home;\r\n","D:\\clone\\myClone\\client\\src\\components\\Register.js",[],"D:\\clone\\myClone\\client\\src\\components\\Login.js",[],"D:\\clone\\myClone\\client\\src\\components\\Main.js",["97","98","99"],"import React, { Fragment } from \"react\";\r\nimport \"./Main.css\";\r\nimport mainPagefashion from \"../img/mainPagefashion.png\";\r\nimport mainImage1 from '../img/mainImage1.jpg';\r\nimport mainImage2 from '../img/mainImage2.jpg';\r\nimport mainImage3 from '../img/mainImage3.jpg';\r\nconst Main = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <ul className=\"nav justify-content-end my-3\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/register\">\r\n              Join now\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link btn btn-outline-primary\"\r\n              aria-current=\"page\"\r\n              href=\"/login\"\r\n            >\r\n              Sign in\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"container my-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm\">\r\n              <h1 className=\"mainPage-h1\">\r\n                Welcome to your Fashion Model search\r\n              </h1>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <img src={mainPagefashion} width=\"100%\" height=\"400\" alt=\"Logo\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-5\">\r\n            <div className=\"col-sm\">\r\n              <h2 className=\"mainPage-h2\">\r\n                Find fashion, fitness and photography models\r\n              </h2>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <div className=\"row my-3\">\r\n                <div className=\"col-sm\">\r\n                  <h2 className=\"mainPage-h2\">\r\n                  <img src={mainImage1} alt=\"image 1\" class=\"img-thumbnail rounded-circle\" />\r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                  <h2 className=\"mainPage-h2\">\r\n                  <img src={mainImage2} alt=\"image 2\" class=\"img-thumbnail rounded-circle\" />               \r\n                  </h2>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                  <h2 className=\"mainPage-h2\">\r\n                  <img src={mainImage3} alt=\"image 3\" class=\"img-thumbnail rounded-circle\" />\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","D:\\clone\\myClone\\client\\src\\routes\\UpdatePage.js",[],"D:\\clone\\myClone\\client\\src\\routes\\ModelDetailPage.js",["100"],"import React, { Fragment, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport ModelFinder from '../apis/ModelFinder';\r\nimport Reviews from '../components/Reviews';\r\nimport { ModelsContext } from '../context/ModelsContext';\r\nimport AddReview from '../components/AddReview';\r\nimport StarRating from '../components/StarRating';\r\nconst ModelDetailPage = () => {\r\n\r\n    const { id } = useParams();\r\n    const { selectedModel, setSelectedModel } = useContext(ModelsContext);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const fetchData = async () => {\r\n\r\n                const response = await ModelFinder.get(`/${id}`);\r\n                console.log(response.data.data)\r\n                setSelectedModel(response.data.data)\r\n\r\n        \r\n            }\r\n            fetchData();\r\n\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n\r\n\r\n    }, [])\r\n    return (\r\n        <div>{selectedModel && (\r\n            <Fragment>\r\n                <h1 className=\"text-center display-1\">{selectedModel.model.name}</h1>\r\n                <div className='text-center'>\r\n                    <StarRating rating={selectedModel.model.average_rating} />\r\n                    <span className=\"text-warning ml-1\">\r\n                        {selectedModel.model.count ? `(${selectedModel.model.count})` : \"(0)\"}\r\n\r\n                    </span>\r\n                </div>\r\n                <div className='mt-3'>\r\n                    <Reviews reviews={selectedModel.reviews} />\r\n\r\n                </div>\r\n                <AddReview />\r\n            </Fragment>\r\n        )}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModelDetailPage\r\n","D:\\clone\\myClone\\client\\src\\context\\ModelsContext.js",[],"D:\\clone\\myClone\\client\\src\\components\\AddModel.js",[],"D:\\clone\\myClone\\client\\src\\components\\UpdateModel.js",["101","102","103"],"import React, { useState, useContext,useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport ModelFinder from '../apis/ModelFinder';\r\nimport { ModelsContext } from '../context/ModelsContext';\r\n\r\nconst UpdateModel = (props) => {\r\n    const { id } = useParams();\r\n    let history=useHistory();\r\n    const { models } = useContext(ModelsContext)\r\n    const [name, setName] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [rankRange, setRankRange] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData=async()=>{\r\n            try {\r\n                \r\n                    const response=await ModelFinder.get(`/${id}`);\r\n                    \r\n                    console.log(response.data.data.model)\r\n                    setName(response.data.data.model.name)\r\n                    setLocation(response.data.data.model.location)\r\n                    setRankRange(response.data.data.model.rank_range)\r\n                }catch (err) {\r\n                console.error(err.message)\r\n            }}\r\n            fetchData();\r\n    }, [])\r\n    const nameChange = (event) => {\r\n        setName(event.target.value)\r\n    };\r\n    const locationChange = (event) => {\r\n        setLocation(event.target.value)\r\n    };\r\n    const rankChange = (event) => {\r\n        setRankRange(event.target.value)\r\n    };\r\n\r\n    const handleUpdateModel = async(e) => {\r\ne.preventDefault();\r\nconst updateModel=await ModelFinder.put(`/${id}`,{\r\n    name:name,\r\n    location:location,\r\n    rank_range:rankRange\r\n})\r\nhistory.push('/dashboard');\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n        {/* <h1>{restaurants[0].name}</h1> */}\r\n            <form>\r\n            <div className='input-group mb-3'>\r\n                <div className='form-group'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input value={name} onChange={nameChange} id='name' className='form-control' type='text' />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='location'>Location</label>\r\n                    <input value={location} onChange={locationChange} id='location' className='form-control' type='text' />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='rank_range'>Rank Range</label>\r\n                    <input value={rankRange} onChange={rankChange} id='rank_range' className='form-control' type='number' />\r\n                </div>\r\n                </div>\r\n                <button type='submit' onClick={handleUpdateModel} className='btn btn-primary'>Submit</button>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateModel\r\n","D:\\clone\\myClone\\client\\src\\components\\ModelList.js",["104","105"],"import React, { useEffect, useContext, Fragment,useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ModelFinder from \"../apis/ModelFinder\";\r\nimport { ModelsContext } from \"../context/ModelsContext\";\r\nimport StarRating from \"./StarRating\";\r\nconst ModelList = (props) => {\r\n  let history = useHistory();\r\n  const { models, setModels } = useContext(ModelsContext);\r\n  const [facePhoto,setFacePhoto]=useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await ModelFinder.get(\"/\");\r\n        setModels(response.data.data.models);\r\n        console.log(response.data.data.models);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n    fetchData();\r\n    console.log('models',models)\r\n    uiFacesFetch(models.length);\r\n  }, []);\r\n\r\n  const uiFacesFetch = async (number) => {\r\n    const response = await fetch(\r\n      `https://uifaces.co/api?limit=${number}&gender[]=female&from_age=18&to_age=30`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"X-API-KEY\": [\"D3745996-3E2C41D1-9CA9CBE9-554CB42A\"],\r\n          Accept: \"application/json\",\r\n          \"Cache-Control\": \"no-cache\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const faces = await response.json();\r\n    setFacePhoto(faces)\r\n    console.log('faces',faces.length)\r\n    \r\n  };\r\n\r\n  \r\n\r\n//   const faceImage = async () => {\r\n//     uiFacesFetch();\r\n   \r\n//   };\r\n\r\n  const handleDeleteModel = async (e, id) => {\r\n    e.stopPropagation();\r\n    try {\r\n      const response = await ModelFinder.delete(`/${id}`);\r\n      setModels(\r\n        models.filter((model) => {\r\n          return model.id !== id;\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleUpdateModel = (e, id) => {\r\n    e.stopPropagation();\r\n    history.push(`/models/${id}/update`);\r\n  };\r\n\r\n  const handleModelSelect = (id) => {\r\n    history.push(`/models/${id}`);\r\n  };\r\n  const renderRating = (model) => {\r\n    if (!model.count) {\r\n      return <span className=\"text-warning\">0 reviews</span>;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <StarRating rating={model.average_rating} />\r\n        <span className=\"text-warning ml-1\">({model.count})</span>\r\n      </Fragment>\r\n    );\r\n  };\r\n  const modelArray = models.map((model,index) => {\r\n    // uiFacesFetch(restaurants.length);\r\n    return (\r\n      <tr\r\n        onClick={() => handleModelSelect(model.id)}\r\n        key={model.id}\r\n      >\r\n        <td>{model.name}</td>\r\n        <td>{model.location}</td>\r\n        <td>{\"$\".repeat(model.rank_range)}</td>\r\n        <td>{renderRating(model)}</td>\r\n        <td>{!facePhoto.length ? <div>Waiting</div>:<img alt='model-face' src={facePhoto[index].photo} style={{borderRadius:'50%'}} width='100px' height='100px'/>}</td>\r\n        <td>\r\n          <button\r\n            onClick={(e) => handleUpdateModel(e, model.id)}\r\n            className=\"btn btn-warning\"\r\n          >\r\n            Update\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <button\r\n            onClick={(e) => handleDeleteModel(e, model.id)}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <table className=\"table table-dark table-hover\">\r\n        <thead>\r\n          <tr className=\"bg-primary\">\r\n            <th scope=\"col\">Model Name</th>\r\n            <th scope=\"col\">Location</th>\r\n            <th scope=\"col\">Rank Range</th>\r\n            <th scope=\"col\">Ratings</th>\r\n            <th scope=\"col\">Photo</th>\r\n            <th scope=\"col\">Edit</th>\r\n            <th scope=\"col\">Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {modelArray}\r\n          {/* <tr>\r\n      \r\n      <td>McDonalds</td>\r\n      <td>Richmond Hill</td>\r\n      <td>$$$</td>\r\n      <td>Ratings</td>\r\n      <td><button className='btn btn-warning'>Update</button></td>\r\n      <td><button className='btn btn-danger'>Delete</button></td>\r\n    </tr>\r\n    <tr>\r\n      \r\n      <td>Tim Hortons</td>\r\n      <td>Thornhill</td>\r\n      <td>$$$$$</td>\r\n      <td>Ratings</td>\r\n      <td><button className='btn btn-warning'>Update</button></td>\r\n      <td><button className='btn btn-danger'>Delete</button></td>\r\n    </tr>\r\n     */}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelList;\r\n","D:\\clone\\myClone\\client\\src\\components\\Reviews.js",[],"D:\\clone\\myClone\\client\\src\\components\\AddReview.js",[],"D:\\clone\\myClone\\client\\src\\components\\StarRating.js",[],"D:\\clone\\myClone\\client\\src\\apis\\ModelFinder.js",[],"D:\\clone\\myClone\\client\\src\\components\\QuestionForm.js",["106","107","108"],"D:\\clone\\myClone\\client\\src\\apis\\Questions.js",[],"D:\\clone\\myClone\\client\\src\\apis\\AnsweredQuestion.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":7,"column":3,"nodeType":"115","messageId":"116","endLine":7,"endColumn":7},{"ruleId":"113","severity":1,"message":"117","line":10,"column":10,"nodeType":"115","messageId":"116","endLine":10,"endColumn":24},{"ruleId":"113","severity":1,"message":"118","line":40,"column":9,"nodeType":"115","messageId":"116","endLine":40,"endColumn":23},{"ruleId":"113","severity":1,"message":"119","line":45,"column":9,"nodeType":"115","messageId":"116","endLine":45,"endColumn":21},{"ruleId":"113","severity":1,"message":"120","line":59,"column":9,"nodeType":"115","messageId":"116","endLine":59,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":84,"column":11,"nodeType":"123","endLine":84,"endColumn":47},{"ruleId":"124","severity":1,"message":"125","line":48,"column":19,"nodeType":"123","endLine":48,"endColumn":94},{"ruleId":"124","severity":1,"message":"125","line":53,"column":19,"nodeType":"123","endLine":53,"endColumn":94},{"ruleId":"124","severity":1,"message":"125","line":58,"column":19,"nodeType":"123","endLine":58,"endColumn":94},{"ruleId":"126","severity":1,"message":"127","line":30,"column":8,"nodeType":"128","endLine":30,"endColumn":10,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"130","line":9,"column":13,"nodeType":"115","messageId":"116","endLine":9,"endColumn":19},{"ruleId":"126","severity":1,"message":"131","line":28,"column":8,"nodeType":"128","endLine":28,"endColumn":10,"suggestions":"132"},{"ruleId":"113","severity":1,"message":"133","line":41,"column":7,"nodeType":"115","messageId":"116","endLine":41,"endColumn":18},{"ruleId":"126","severity":1,"message":"134","line":24,"column":6,"nodeType":"128","endLine":24,"endColumn":8,"suggestions":"135"},{"ruleId":"113","severity":1,"message":"136","line":55,"column":13,"nodeType":"115","messageId":"116","endLine":55,"endColumn":21},{"ruleId":"113","severity":1,"message":"137","line":11,"column":10,"nodeType":"115","messageId":"116","endLine":11,"endColumn":20},{"ruleId":"113","severity":1,"message":"138","line":14,"column":10,"nodeType":"115","messageId":"116","endLine":14,"endColumn":22},{"ruleId":"113","severity":1,"message":"139","line":29,"column":11,"nodeType":"115","messageId":"116","endLine":29,"endColumn":25},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","'onSearchChange' is assigned a value but never used.","'onSubmitForm' is assigned a value but never used.","'superModelMap' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setSelectedModel'. Either include them or remove the dependency array.","ArrayExpression",["142"],"'models' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["143"],"'updateModel' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'models' and 'setModels'. Either include them or remove the dependency array.",["144"],"'response' is assigned a value but never used.","'idSelected' is assigned a value but never used.","'disableAskMe' is assigned a value but never used.","'updateQuestion' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [id, setSelectedModel]",{"range":"151","text":"152"},"Update the dependencies array to be: [id]",{"range":"153","text":"154"},"Update the dependencies array to be: [models, setModels]",{"range":"155","text":"156"},[909,911],"[id, setSelectedModel]",[1097,1099],"[id]",[833,835],"[models, setModels]"]